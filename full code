#include<stdio.h>
#include<unistd.h>
#include<semaphore.h>
#include<pthread.h>

int rc =0, data= 0;
sem_t mutex, wr;
void *reader(void *arg){
   sem_wait(&mutex);
   rc++;
   if(rc==1)
   sem_wait(&wr);
   sem_post(&mutex);
   printf("Reader %d read data %d\n",arg,data);
   sleep(1);
   sem_wait(&mutex);
   rc--;
   if(rc==0)
   sem_post(&wr);
   sem_post(&mutex);
}

void *writer(void *arg){
   sem_wait(&wr);
   data++;
   printf("Writer %d has written data %d\n",arg,data);
   sleep(1);
   sem_post(&wr);
}
int main(){
   int i;
   sem_init(&mutex,0,1);
   sem_init(&wr,0,1);
   int n;
   printf("enter number of readers and writers =\n ");
fflush(stdin);
scanf("%d",&n);
if(n>0){
//   printf("enter number of writers");
//fflush(stdin);
 // scanf("%d",&write);
fflush(stdin);
   pthread_t r[n];
   pthread_t w[n];

   for(i=0;i<n;i++){
    pthread_create(&w[i],NULL,writer,i);
    pthread_create(&r[i],NULL,reader,i);
   }

   for(i=0;i<n;i++){
   pthread_join(w[i],NULL);
   pthread_join(r[i],NULL);
   }}
else{
printf("enter a valid number of readers and writers\n");
}
}
